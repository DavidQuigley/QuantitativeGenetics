% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_fit_statistic}
\alias{plot_fit_statistic}
\title{Plot a dose response curve summary values across one or more time points}
\usage{
plot_fit_statistic(fit_stats, statistic, ..., alpha = 1, obs_min = NA)
}
\arguments{
\item{fit_stats}{data frame returned by call to \code{fit_statistics}}

\item{statistic}{statistic to plot, must be one of AUC, EC50}

\item{...}{standard parameters for \code{plot} function}

\item{alpha}{cut-off to distinguish results with an ANOVA_P_value that is 
considered statistically significant, plotted as closed circles. Defaults to 
1.}

\item{obs_min}{cut-off to distinguish results where the minimum observed 
response across any dose is no greater than obs_min. Useful for restricting 
plots to those values that acheived a result such as a Surviving Fraction 
below 50 percent. Defaults to NA, which plots everything.}
}
\value{
data frames with plotted points, colors. Useful for drawing a legend.
}
\description{
Used to generate a line and dot plot of one or more AUC or EC50 values 
across a series of time points. All of the values in the fit_stats data 
frame will be plotted. Observations that do not meet the criteria specified 
in the alpha parameter are plotted using open values (e.g. pch=1). 
Observations where the minimum EC50 exceeds the obs_min parameter can be 
plotted using a user-specified value for the pch parameter; by default this 
is pch=13.
}
\examples{
pkg = "HTDoseResponseCurve"
fn_map = system.file("extdata","sample_data_384_platemap.txt",package=pkg)
fn_data = system.file("extdata", "sample_data_384.xlsx", package = pkg)
plate_map = read_platemap_from_Incucyte_XML( fn_map )
plate_data = read_plates_from_Incucyte_export( fn_data, "p1", 
                                               number_of_wells=384)
plate_data$hours = round(plate_data$hours)
ds = combine_data_and_map( plate_data, plate_map, negative_control = "DMSO" )
ds = normalize_plates_by_vehicle( ds, summary_method="mean")
ds = ds[ds$treatment=="drug13",]
fits = fit_statistics(ds, fct = drc::LL.3() )
res=plot_fit_statistic( fits, "AUC", ylim=c(0, 6) ) 
}

