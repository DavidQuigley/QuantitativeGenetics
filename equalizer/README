INTRODUCTION
------------------------------------------------------------------------------------------

Affymetrix microarrays are designed using a reference genome from human, mouse, or 
another organism. Single Nucleotide Polymorphisms (SNPs) in the genomes of individual 
humans and model organisms that vary from the reference annotations affect the binding of 
cDNA to microarray probes, affecting the results of experiments measuring gene expression 
in organisms with distinct genomes. Genetic experiments performed using these arrays are 
subject to systemic bias unless the effect of these SNPs is accounted for.

The software package equalizer drastically reduces this problem for the commonly used 
Affymetrix IVT and Gene ST platforms by using whole-genome sequence data to remove probes 
which overlap SNPs. The customized annotation files generated by equalizer can be used 
for normalization in oligo or other packages. 

REQUIREMENTS
------------------------------------------------------------------------------------------

1) Python (I have tested versions 2.7.3 and 3.4). 
   Earlier outdated versions of Python may not work. 
   Python is available at http://python.org.
   
2) bedtools (I have used 2.15.0 and 2.17.0) 
   bedtools is available at https://github.com/arq5x/bedtools2

3) A VCF file for each genome you wish to scan for SNPs that overlap 
   probes. Generate this yourself or download a VCF file from your favorite 
   genome provider. A sample VCF file is provided in the example bundle.

4) Affymetrix microarray platform description files. Available directly from 
   Affymetrix's NetAffx website. You may be able to download the files you need from 
   my personal website, http://davidquigley.com/equalizer.html
   
   For IVT arrays, where ARRNAME is your array platform:
    a) ARRNAME.annot.csv
    b) ARRNAME.cdf
    c) ARRNAME.probe_tab
    d) ARRNAME.bed
    e) A CEL file in the same format as ARRNAME
       If you are using the IVT-style files, you can use any one of your own CEL files 
    
    For ST arrays, where ARRNAME is your array platform
    a) ARRNAME.probeset.csv
    b) ARRNAME.transcript.csv
    c) ARRNAME.pgf
    d) ARRNAME.mps
    e) ARRNAME.clf
    d) ARRNAME.bed
    
5) (OPTIONAL)
   R (at the time of writing, I used 3.1.1). 
   R is freely available at http://cran.r-project.org/


SELF-CONTAINED EXAMPLE
------------------------------------------------------------------------------------------

A self-contained example that uses a small VCF file with SNPs in a single gene (Cdc26) 
to rewrite a Mouse Gene ST probe description fileset and calculate eQTLs is 
available at:

http://davidquigley.com/software/equalizer/equalizer_example.tar.gz

TO RUN THE EXAMPLE:

> wget http://davidquigley.com/software/equalizer/equalizer_example.tar.gz
> tar -xzf equalizer_example.tar.gz
  ******************************************************************
  * IMPORTANT: Before continuing, edit the second line of the file *
  * run_example.sh to specify your BEDTools installation point     *
  ******************************************************************
> sudo sh run_example.sh

The example has been verified to work a fresh installation of Ubuntu linux that contains 
recent installations of R and bedtools. I have run this code on a new T2.medium instance 
on Amazon AWS after installing Bedtools and R with the following commands:

sudo apt-get update
sudo apt-get install r-base
wget https://bedtools.googlecode.com/files/BEDTools.v2.17.0.tar.gz
tar -xzf BEDTools.v2.17.0.tar.gz
cd bedtools-2.17.0
sudo make 
cd ..

The T2.small instance available on Amazon AWS has insufficient RAM to run this example.

RUNNING NOTES
------------------------------------------------------------------------------------------

********************************************
IMPORTANT: IF YOU ARE NOT AN ADMINISTRATOR
********************************************

If you do not have superuser rights on your machine, and wish to generate the R package, 
you will have to modify the create_package.R script created by equalizer to install the 
package locally in a part of the hard drive where you have write access, rather than 
in a location available to the entire system. You can also ask an administrator to install 
the source package at any time.

********************************************
WHAT TRACK OF THE BED FILE SHOULD I USE?
********************************************

The BED file from Affymetrix contains four tracks:

Affymetrix MoGene-2_0-st-v1_exon probeset(transcriptID_probesetID)
Affymetrix MoGene-2_0-st-v1_gene level exon(transcriptID)
Affymetrix MoGene-2_0-st-v1_gene probeset(transcriptID)
Affymetrix MoGene-2_0-st-v1_probe(transcriptID_probesetID)

The purpose of the BED file in this context is to obtain the mapped positions of each 
individual probe. If you call:
grep 17210850_17210851 MoGene-2_0-st-v1.mm10.bed

you'll see:
chr1	3102029	3102110	17210850_17210851	0	+	3102029	3102110	204,102,51	8	24,24,24,24,24,24,24,24,	0,1,5,6,7,51,52,57,
chr1	3102029	3102053	17210850_17210851	0	+	3102029	3102053	0,0,0	1		
chr1	3102030	3102054	17210850_17210851	0	+	3102030	3102054	0,0,0	1		
chr1	3102034	3102058	17210850_17210851	0	+	3102034	3102058	0,0,0	1		
chr1	3102035	3102059	17210850_17210851	0	+	3102035	3102059	0,0,0	1		
chr1	3102036	3102060	17210850_17210851	0	+	3102036	3102060	0,0,0	1		
chr1	3102080	3102104	17210850_17210851	0	+	3102080	3102104	0,0,0	1		
chr1	3102081	3102105	17210850_17210851	0	+	3102081	3102105	0,0,0	1		
chr1	3102086	3102110	17210850_17210851	0	+	3102086	3102110	0,0,0	1

Note that the first entry, from the probeset track, spans chr1:3102029-3102110. The 8 on 
that line indicates 8 probes make up that probeset. The remaining lines are the locations 
of the eight individual probes (e.g. chr1:3102029-3102053). If there is a SNP between 
chr1:3102029-3102110 that does NOT intersect one of the probe locations, it should not 
affect the hybridization.

Therefore, retain only the last track. Do not use the probeset track and intermingle it 
with the probe track.

